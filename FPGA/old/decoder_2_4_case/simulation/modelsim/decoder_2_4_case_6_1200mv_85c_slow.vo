// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "08/08/2020 15:16:47"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module decoder_2_4_case (
	a,
	en,
	y);
input 	[1:0] a;
input 	en;
output 	[3:0] y;

// Design Ports Information
// y[0]	=>  Location: PIN_A15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// y[1]	=>  Location: PIN_A13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// y[2]	=>  Location: PIN_B13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// y[3]	=>  Location: PIN_A11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// en	=>  Location: PIN_M15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[1]	=>  Location: PIN_T8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a[0]	=>  Location: PIN_M1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("decoder_2_4_case_6_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \y[0]~output_o ;
wire \y[1]~output_o ;
wire \y[2]~output_o ;
wire \y[3]~output_o ;
wire \a[1]~input_o ;
wire \a[0]~input_o ;
wire \en~input_o ;
wire \Decoder0~0_combout ;
wire \Decoder0~1_combout ;
wire \Decoder0~2_combout ;
wire \Decoder0~3_combout ;


// Location: IOOBUF_X38_Y34_N16
cycloneive_io_obuf \y[0]~output (
	.i(\Decoder0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[0]~output .bus_hold = "false";
defparam \y[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X49_Y34_N2
cycloneive_io_obuf \y[1]~output (
	.i(\Decoder0~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[1]~output .bus_hold = "false";
defparam \y[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X49_Y34_N9
cycloneive_io_obuf \y[2]~output (
	.i(\Decoder0~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[2]~output .bus_hold = "false";
defparam \y[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X40_Y34_N2
cycloneive_io_obuf \y[3]~output (
	.i(\Decoder0~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[3]~output .bus_hold = "false";
defparam \y[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X27_Y0_N15
cycloneive_io_ibuf \a[1]~input (
	.i(a[1]),
	.ibar(gnd),
	.o(\a[1]~input_o ));
// synopsys translate_off
defparam \a[1]~input .bus_hold = "false";
defparam \a[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y16_N22
cycloneive_io_ibuf \a[0]~input (
	.i(a[0]),
	.ibar(gnd),
	.o(\a[0]~input_o ));
// synopsys translate_off
defparam \a[0]~input .bus_hold = "false";
defparam \a[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X53_Y17_N15
cycloneive_io_ibuf \en~input (
	.i(en),
	.ibar(gnd),
	.o(\en~input_o ));
// synopsys translate_off
defparam \en~input .bus_hold = "false";
defparam \en~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X35_Y32_N16
cycloneive_lcell_comb \Decoder0~0 (
// Equation(s):
// \Decoder0~0_combout  = (!\a[1]~input_o  & (!\a[0]~input_o  & \en~input_o ))

	.dataa(gnd),
	.datab(\a[1]~input_o ),
	.datac(\a[0]~input_o ),
	.datad(\en~input_o ),
	.cin(gnd),
	.combout(\Decoder0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~0 .lut_mask = 16'h0300;
defparam \Decoder0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X35_Y32_N18
cycloneive_lcell_comb \Decoder0~1 (
// Equation(s):
// \Decoder0~1_combout  = (!\a[1]~input_o  & (\a[0]~input_o  & \en~input_o ))

	.dataa(gnd),
	.datab(\a[1]~input_o ),
	.datac(\a[0]~input_o ),
	.datad(\en~input_o ),
	.cin(gnd),
	.combout(\Decoder0~1_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~1 .lut_mask = 16'h3000;
defparam \Decoder0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X35_Y32_N20
cycloneive_lcell_comb \Decoder0~2 (
// Equation(s):
// \Decoder0~2_combout  = (\a[1]~input_o  & (!\a[0]~input_o  & \en~input_o ))

	.dataa(gnd),
	.datab(\a[1]~input_o ),
	.datac(\a[0]~input_o ),
	.datad(\en~input_o ),
	.cin(gnd),
	.combout(\Decoder0~2_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~2 .lut_mask = 16'h0C00;
defparam \Decoder0~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X35_Y32_N30
cycloneive_lcell_comb \Decoder0~3 (
// Equation(s):
// \Decoder0~3_combout  = (\a[1]~input_o  & (\a[0]~input_o  & \en~input_o ))

	.dataa(gnd),
	.datab(\a[1]~input_o ),
	.datac(\a[0]~input_o ),
	.datad(\en~input_o ),
	.cin(gnd),
	.combout(\Decoder0~3_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~3 .lut_mask = 16'hC000;
defparam \Decoder0~3 .sum_lutc_input = "datac";
// synopsys translate_on

assign y[0] = \y[0]~output_o ;

assign y[1] = \y[1]~output_o ;

assign y[2] = \y[2]~output_o ;

assign y[3] = \y[3]~output_o ;

endmodule
