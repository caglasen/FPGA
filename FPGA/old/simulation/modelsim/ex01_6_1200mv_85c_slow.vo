// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "08/15/2020 13:45:18"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ex01 (
	i0,
	i1,
	i2,
	q1,
	q2);
input 	i0;
input 	i1;
input 	i2;
output 	q1;
output 	q2;

// Design Ports Information
// q1	=>  Location: PIN_A15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q2	=>  Location: PIN_A13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// i2	=>  Location: PIN_B9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// i0	=>  Location: PIN_M1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// i1	=>  Location: PIN_T8,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("ex01_6_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \q1~output_o ;
wire \q2~output_o ;
wire \i2~input_o ;
wire \i0~input_o ;
wire \i1~input_o ;
wire \q1~0_combout ;
wire \q2~0_combout ;


// Location: IOOBUF_X38_Y34_N16
cycloneive_io_obuf \q1~output (
	.i(\q1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q1~output_o ),
	.obar());
// synopsys translate_off
defparam \q1~output .bus_hold = "false";
defparam \q1~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X49_Y34_N2
cycloneive_io_obuf \q2~output (
	.i(\q2~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q2~output_o ),
	.obar());
// synopsys translate_off
defparam \q2~output .bus_hold = "false";
defparam \q2~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X25_Y34_N8
cycloneive_io_ibuf \i2~input (
	.i(i2),
	.ibar(gnd),
	.o(\i2~input_o ));
// synopsys translate_off
defparam \i2~input .bus_hold = "false";
defparam \i2~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y16_N22
cycloneive_io_ibuf \i0~input (
	.i(i0),
	.ibar(gnd),
	.o(\i0~input_o ));
// synopsys translate_off
defparam \i0~input .bus_hold = "false";
defparam \i0~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X27_Y0_N15
cycloneive_io_ibuf \i1~input (
	.i(i1),
	.ibar(gnd),
	.o(\i1~input_o ));
// synopsys translate_off
defparam \i1~input .bus_hold = "false";
defparam \i1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N16
cycloneive_lcell_comb \q1~0 (
// Equation(s):
// \q1~0_combout  = (\i2~input_o ) # ((\i0~input_o ) # (\i1~input_o ))

	.dataa(\i2~input_o ),
	.datab(\i0~input_o ),
	.datac(gnd),
	.datad(\i1~input_o ),
	.cin(gnd),
	.combout(\q1~0_combout ),
	.cout());
// synopsys translate_off
defparam \q1~0 .lut_mask = 16'hFFEE;
defparam \q1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X30_Y23_N18
cycloneive_lcell_comb \q2~0 (
// Equation(s):
// \q2~0_combout  = (\i2~input_o ) # ((!\i0~input_o  & !\i1~input_o ))

	.dataa(\i2~input_o ),
	.datab(\i0~input_o ),
	.datac(gnd),
	.datad(\i1~input_o ),
	.cin(gnd),
	.combout(\q2~0_combout ),
	.cout());
// synopsys translate_off
defparam \q2~0 .lut_mask = 16'hAABB;
defparam \q2~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign q1 = \q1~output_o ;

assign q2 = \q2~output_o ;

endmodule
