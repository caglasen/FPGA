module free_run_shift_reg #(parameter N=8)(clk, reset, s_in, s_out);
input wire clk, reset;
output wire s_out[N-1:0];

reg [24:0] clock2;

reg [N-1:0] r_reg;
wire[N-1:0] r_next;


always @(posedge clk)
	clock2 = clok2 + 1;
	
always @(posedge clk, posedge reset)
	if (reset)
		r_reg <= 0;
	else
		r_reg <= r_next;
		
assign r_next = (r_reg[0], r_reg[N-1:1]};
assign s_out = r_next;

initial
	r_reg = 8'b1;
